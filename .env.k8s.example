# Kubernetes Token-based Authentication Configuration
# Copy this file to .env.k8s and fill in your actual values

# Kubernetes API Server URL
# Example: https://api.k8s.solid.dankook.ac.kr:6443
K8S_API_SERVER=https://your-k8s-api-server:6443

# Kubernetes Cluster Name (for context naming)
K8S_CLUSTER_NAME=solid-cloud

# Service Account Token
# Get token from your cluster:
#   kubectl create serviceaccount monitoring-sa -n default
#   kubectl create clusterrolebinding monitoring-sa-admin --clusterrole=cluster-admin --serviceaccount=default:monitoring-sa
#   TOKEN_SECRET=$(kubectl get serviceaccount monitoring-sa -o jsonpath='{.secrets[0].name}')
#   kubectl get secret $TOKEN_SECRET -o jsonpath='{.data.token}' | base64 -d
K8S_TOKEN=your-service-account-token-here

# CA Certificate (Base64 encoded)
# Get CA cert from your cluster:
#   kubectl get secret $TOKEN_SECRET -o jsonpath='{.data.ca\.crt}'
K8S_CA_CERT=your-base64-encoded-ca-cert-here

# Optional: Skip TLS verification (not recommended for production)
# Set to "true" only if you cannot obtain the CA certificate
K8S_SKIP_TLS_VERIFY=false
