apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: titanium-prod
  namespace: argocd
  # Finalizer를 설정하여 Application 삭제 시 리소스도 함께 삭제
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # 이 Application이 속한 프로젝트
  project: default

  # 소스 저장소 정보
  source:
    # GitHub 저장소 URL (HTTPS)
    repoURL: https://github.com/DvwN-Lee/Monitoring-v2.git
    # 추적할 브랜치
    targetRevision: main
    # Kustomize 매니페스트 경로
    path: k8s-manifests/overlays/solid-cloud

  # 배포 대상 클러스터 정보
  destination:
    # 현재 클러스터에 배포
    server: https://kubernetes.default.svc
    # 배포할 네임스페이스
    namespace: titanium-prod

  # 동기화 정책
  syncPolicy:
    # 자동 동기화 활성화
    automated:
      # Git의 변경사항을 자동으로 배포
      prune: true
      # 애플리케이션이 OutOfSync 상태일 때 자동으로 복구
      selfHeal: true
      # 배포 전 기존 리소스 정리 (선택사항)
      allowEmpty: false

    # 동기화 옵션
    syncOptions:
      # 네임스페이스가 없으면 자동 생성
      - CreateNamespace=true
      # PruneLast: 다른 리소스 삭제 후 마지막에 리소스 정리
      - PruneLast=true
      # 서버 측에서 리소스 검증
      - Validate=true
      # 서버 측 Apply 사용
      - ServerSideApply=true

    # 재시도 정책
    retry:
      # 최대 재시도 횟수
      limit: 5
      # 재시도 backoff 설정
      backoff:
        # 초기 대기 시간
        duration: 5s
        # backoff factor
        factor: 2
        # 최대 대기 시간
        maxDuration: 3m

  # 무시할 리소스 차이 설정 (선택사항)
  ignoreDifferences:
    # Secrets의 특정 필드 무시
    - group: ""
      kind: Secret
      jsonPointers:
        - /data
      # ConfigMap에서 자동 생성된 해시 무시
    - group: ""
      kind: ConfigMap
      name: prod-app-config
      jsonPointers:
        - /metadata/annotations

  # 헬스 체크 설정
  # Argo CD가 애플리케이션의 상태를 추적
  # 기본 헬스 체크를 사용하되, 필요 시 커스터마이징 가능
